<templateSet group="React native TS">
  <template name="screen" value="import React, {ReactElement} from &quot;react&quot;;&#10;import {View} from &quot;react-native&quot;;&#10;&#10;/**&#10; * $componentName$. &#10; *&#10; * @constructor&#10; */&#10;const $componentName$ = (): ReactElement =&gt; {&#10;    return (&#10;        &lt;View&gt;&#10;&#10;        &lt;/View&gt;&#10;    );&#10;};&#10;&#10;export default $componentName$;&#10;" description="Create a Screen component" toReformat="false" toShortenFQNames="true">
    <variable name="componentName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="fc" value="import React, {FC} from &quot;react&quot;;&#10;&#10;/**&#10; * $componentName$Props interface.&#10; * &#10; * @property {any} [style] - Style applied to the root element.&#10; */&#10;interface $componentName$Props {&#10;    style?: any;&#10;}&#10;&#10;/**&#10; * $componentDoc$&#10; *&#10; * @param {$componentName$Props} props&#10; * @constructor&#10; */&#10;const $componentName$: FC&lt;$componentName$Props&gt; = (props: $componentName$Props) =&gt; {&#10;    const {style} = props;&#10;    &#10;    return (&#10;        &#10;    );&#10;};&#10;&#10;export default $componentName$;&#10;" description="Create a functional component" toReformat="false" toShortenFQNames="true">
    <variable name="componentName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="componentDoc" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="hk" value="/**&#10; * Hook to $doc$.&#10; *&#10; * @return {object}&#10; */&#10;const use$hook$ = () =&gt; {&#10;&#10;    const index = () =&gt; {&#10;&#10;    };&#10;&#10;    return {&#10;        index&#10;    };&#10;};&#10;&#10;export default use$hook$;&#10;" description="Create a hook" toReformat="false" toShortenFQNames="true">
    <variable name="hook" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="doc" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ldng" value="const [loading, setLoading] = useState&lt;boolean&gt;(true);" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>